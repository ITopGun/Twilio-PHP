<?php

/**
 * This code was generated by
 * \ / _    _  _|   _  _
 * | (_)\/(_)(_|\/| |(/_  v1.0.0
 * /       /
 */

namespace Twilio\Tests\Integration\Oauth\V1;

use Twilio\Exceptions\DeserializeException;
use Twilio\Exceptions\TwilioException;
use Twilio\Http\Response;
use Twilio\Serialize;
use Twilio\Tests\HolodeckTestCase;
use Twilio\Tests\Request;

class DeviceCodeTest extends HolodeckTestCase {
    public function testCreateRequest(): void {
        $this->holodeck->mock(new Response(500, ''));

        try {
            $this->twilio->oauth->v1->deviceCode->create("client_sid", ["scopes"]);
        } catch (DeserializeException $e) {}
          catch (TwilioException $e) {}

        $values = [
            'ClientSid' => "client_sid",
            'Scopes' => Serialize::map(["scopes"], function($e) { return $e; }),
        ];

        $this->assertRequest(new Request(
            'post',
            'https://oauth.twilio.com/v1/device/code',
            null,
            $values
        ));
    }

    public function testCreateResponse(): void {
        $this->holodeck->mock(new Response(
            201,
            '
            {
                "device_code": "LiwuhE0bIhqemK6sd34tXfobVCR9yrk0",
                "user_code": "Hkf1WaID3",
                "verification_uri": "v1/oauth2/device/activate",
                "verification_uri_complete": "v1/oauth2/device/activate?user_code=Hkf1WaID3",
                "expires_in": 299,
                "interval": 5
            }
            '
        ));

        $actual = $this->twilio->oauth->v1->deviceCode->create("client_sid", ["scopes"]);

        $this->assertNotNull($actual);
    }
}