<?php

/**
 * This code was generated by
 * \ / _    _  _|   _  _
 * | (_)\/(_)(_|\/| |(/_  v1.0.0
 * /       /
 */

namespace Twilio\Tests\Integration\Messaging\V1;

use Twilio\Exceptions\DeserializeException;
use Twilio\Exceptions\TwilioException;
use Twilio\Http\Response;
use Twilio\Serialize;
use Twilio\Tests\HolodeckTestCase;
use Twilio\Tests\Request;

class DomainConfigTest extends HolodeckTestCase {
    public function testUpdateRequest(): void {
        $this->holodeck->mock(new Response(500, ''));

        try {
            $this->twilio->messaging->v1->domainConfig("DNXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX")->update(["MGXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"]);
        } catch (DeserializeException $e) {}
          catch (TwilioException $e) {}

        $values = [
            'MessagingServiceSids' => Serialize::map(["MGXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"], function($e) { return $e; }),
        ];

        $this->assertRequest(new Request(
            'post',
            'https://messaging.twilio.com/v1/LinkShortening/Domains/DNXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX/Config',
            null,
            $values
        ));
    }

    public function testUpdateResponse(): void {
        $this->holodeck->mock(new Response(
            200,
            '
            {
                "domain_sid": "DNaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                "messaging_service_sids": [
                    "MGaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                    "MGaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab"
                ],
                "config_sid": "ZKaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                "fallback_url": "https://www.example.com",
                "callback_url": "https://www.example.com",
                "date_created": "2015-07-30T20:00:00Z",
                "date_updated": "2015-07-30T20:00:00Z",
                "url": "https://messaging.twilio.com/v1/LinkShortening/Domains/DNaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Config"
            }
            '
        ));

        $actual = $this->twilio->messaging->v1->domainConfig("DNXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX")->update(["MGXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"]);

        $this->assertNotNull($actual);
    }

    public function testCreateResponse(): void {
        $this->holodeck->mock(new Response(
            200,
            '
            {
                "domain_sid": "DNaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                "messaging_service_sids": [
                    "MGaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                    "MGaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab"
                ],
                "config_sid": "ZKaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                "fallback_url": "https://www.example.com",
                "callback_url": "https://www.example.com",
                "date_created": "2015-07-30T20:00:00Z",
                "date_updated": "2015-07-30T20:00:00Z",
                "url": "https://messaging.twilio.com/v1/LinkShortening/Domains/DNaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Config"
            }
            '
        ));

        $actual = $this->twilio->messaging->v1->domainConfig("DNXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX")->update(["MGXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"]);

        $this->assertNotNull($actual);
    }

    public function testFetchRequest(): void {
        $this->holodeck->mock(new Response(500, ''));

        try {
            $this->twilio->messaging->v1->domainConfig("DNXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX")->fetch();
        } catch (DeserializeException $e) {}
          catch (TwilioException $e) {}

        $this->assertRequest(new Request(
            'get',
            'https://messaging.twilio.com/v1/LinkShortening/Domains/DNXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX/Config'
        ));
    }

    public function testFetchResponse(): void {
        $this->holodeck->mock(new Response(
            200,
            '
            {
                "domain_sid": "DNaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                "config_sid": "ZKaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                "fallback_url": "https://www.example.com",
                "callback_url": "https://www.example.com",
                "date_created": "2015-07-30T20:00:00Z",
                "date_updated": "2015-07-30T20:00:00Z",
                "messaging_service_sids": [
                    "MGaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                    "MGaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab"
                ],
                "url": "https://messaging.twilio.com/v1/LinkShortening/Domains/DNaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Config"
            }
            '
        ));

        $actual = $this->twilio->messaging->v1->domainConfig("DNXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX")->fetch();

        $this->assertNotNull($actual);
    }
}